// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bluzelle.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BznMsg struct {
	// Types that are valid to be assigned to Msg:
	//	*BznMsg_Db
	//	*BznMsg_Json
	//	*BznMsg_AuditMessage
	Msg                  isBznMsg_Msg `protobuf_oneof:"msg"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *BznMsg) Reset()         { *m = BznMsg{} }
func (m *BznMsg) String() string { return proto.CompactTextString(m) }
func (*BznMsg) ProtoMessage()    {}
func (*BznMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_bluzelle_d99d7302c0d99f78, []int{0}
}
func (m *BznMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BznMsg.Unmarshal(m, b)
}
func (m *BznMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BznMsg.Marshal(b, m, deterministic)
}
func (dst *BznMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BznMsg.Merge(dst, src)
}
func (m *BznMsg) XXX_Size() int {
	return xxx_messageInfo_BznMsg.Size(m)
}
func (m *BznMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_BznMsg.DiscardUnknown(m)
}

var xxx_messageInfo_BznMsg proto.InternalMessageInfo

type isBznMsg_Msg interface {
	isBznMsg_Msg()
}

type BznMsg_Db struct {
	Db *DatabaseMsg `protobuf:"bytes,10,opt,name=db,proto3,oneof"`
}
type BznMsg_Json struct {
	Json string `protobuf:"bytes,11,opt,name=json,proto3,oneof"`
}
type BznMsg_AuditMessage struct {
	AuditMessage *AuditMessage `protobuf:"bytes,12,opt,name=audit_message,json=auditMessage,proto3,oneof"`
}

func (*BznMsg_Db) isBznMsg_Msg()           {}
func (*BznMsg_Json) isBznMsg_Msg()         {}
func (*BznMsg_AuditMessage) isBznMsg_Msg() {}

func (m *BznMsg) GetMsg() isBznMsg_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *BznMsg) GetDb() *DatabaseMsg {
	if x, ok := m.GetMsg().(*BznMsg_Db); ok {
		return x.Db
	}
	return nil
}

func (m *BznMsg) GetJson() string {
	if x, ok := m.GetMsg().(*BznMsg_Json); ok {
		return x.Json
	}
	return ""
}

func (m *BznMsg) GetAuditMessage() *AuditMessage {
	if x, ok := m.GetMsg().(*BznMsg_AuditMessage); ok {
		return x.AuditMessage
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*BznMsg) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _BznMsg_OneofMarshaler, _BznMsg_OneofUnmarshaler, _BznMsg_OneofSizer, []interface{}{
		(*BznMsg_Db)(nil),
		(*BznMsg_Json)(nil),
		(*BznMsg_AuditMessage)(nil),
	}
}

func _BznMsg_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*BznMsg)
	// msg
	switch x := m.Msg.(type) {
	case *BznMsg_Db:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Db); err != nil {
			return err
		}
	case *BznMsg_Json:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Json)
	case *BznMsg_AuditMessage:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AuditMessage); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("BznMsg.Msg has unexpected type %T", x)
	}
	return nil
}

func _BznMsg_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*BznMsg)
	switch tag {
	case 10: // msg.db
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatabaseMsg)
		err := b.DecodeMessage(msg)
		m.Msg = &BznMsg_Db{msg}
		return true, err
	case 11: // msg.json
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Msg = &BznMsg_Json{x}
		return true, err
	case 12: // msg.audit_message
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AuditMessage)
		err := b.DecodeMessage(msg)
		m.Msg = &BznMsg_AuditMessage{msg}
		return true, err
	default:
		return false, nil
	}
}

func _BznMsg_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*BznMsg)
	// msg
	switch x := m.Msg.(type) {
	case *BznMsg_Db:
		s := proto.Size(x.Db)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BznMsg_Json:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Json)))
		n += len(x.Json)
	case *BznMsg_AuditMessage:
		s := proto.Size(x.AuditMessage)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*BznMsg)(nil), "pb.bzn_msg")
}

func init() { proto.RegisterFile("bluzelle.proto", fileDescriptor_bluzelle_d99d7302c0d99f78) }

var fileDescriptor_bluzelle_d99d7302c0d99f78 = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0xca, 0x29, 0xad,
	0x4a, 0xcd, 0xc9, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x92, 0xe2,
	0x4b, 0x49, 0x2c, 0x49, 0x4c, 0x4a, 0x2c, 0x86, 0x8a, 0x49, 0x71, 0x27, 0x96, 0xa6, 0x64, 0x96,
	0x40, 0x38, 0x4a, 0x2d, 0x8c, 0x5c, 0xec, 0x49, 0x55, 0x79, 0xf1, 0xb9, 0xc5, 0xe9, 0x42, 0x4a,
	0x5c, 0x4c, 0x29, 0x49, 0x12, 0x5c, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0x02, 0x7a, 0x05, 0x49, 0x7a,
	0x30, 0x8d, 0x20, 0x59, 0x0f, 0x86, 0x20, 0xa6, 0x94, 0x24, 0x21, 0x11, 0x2e, 0x96, 0xac, 0xe2,
	0xfc, 0x3c, 0x09, 0x6e, 0x05, 0x46, 0x0d, 0x4e, 0x0f, 0x86, 0x20, 0x30, 0x4f, 0xc8, 0x82, 0x8b,
	0x17, 0x6c, 0x68, 0x7c, 0x6e, 0x6a, 0x71, 0x71, 0x62, 0x7a, 0xaa, 0x04, 0x0f, 0xd8, 0x10, 0x41,
	0x90, 0x21, 0x28, 0x12, 0x1e, 0x0c, 0x41, 0x3c, 0x60, 0x01, 0x5f, 0x08, 0xdf, 0x89, 0x95, 0x8b,
	0x39, 0xb7, 0x38, 0x3d, 0x89, 0x0d, 0xec, 0x1a, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2f,
	0x40, 0x04, 0x3f, 0xc0, 0x00, 0x00, 0x00,
}
