// Code generated by protoc-gen-go. DO NOT EDIT.
// source: audit.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AuditMessage struct {
	// Types that are valid to be assigned to Msg:
	//	*AuditMessage_Commit
	//	*AuditMessage_LeaderStatus
	Msg                  isAuditMessage_Msg `protobuf_oneof:"msg"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AuditMessage) Reset()         { *m = AuditMessage{} }
func (m *AuditMessage) String() string { return proto.CompactTextString(m) }
func (*AuditMessage) ProtoMessage()    {}
func (*AuditMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_audit_bb1b365a4dddcd48, []int{0}
}
func (m *AuditMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditMessage.Unmarshal(m, b)
}
func (m *AuditMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditMessage.Marshal(b, m, deterministic)
}
func (dst *AuditMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditMessage.Merge(dst, src)
}
func (m *AuditMessage) XXX_Size() int {
	return xxx_messageInfo_AuditMessage.Size(m)
}
func (m *AuditMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditMessage.DiscardUnknown(m)
}

var xxx_messageInfo_AuditMessage proto.InternalMessageInfo

type isAuditMessage_Msg interface {
	isAuditMessage_Msg()
}

type AuditMessage_Commit struct {
	Commit *CommitNotification `protobuf:"bytes,1,opt,name=commit,proto3,oneof"`
}
type AuditMessage_LeaderStatus struct {
	LeaderStatus *LeaderStatus `protobuf:"bytes,2,opt,name=leader_status,json=leaderStatus,proto3,oneof"`
}

func (*AuditMessage_Commit) isAuditMessage_Msg()       {}
func (*AuditMessage_LeaderStatus) isAuditMessage_Msg() {}

func (m *AuditMessage) GetMsg() isAuditMessage_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *AuditMessage) GetCommit() *CommitNotification {
	if x, ok := m.GetMsg().(*AuditMessage_Commit); ok {
		return x.Commit
	}
	return nil
}

func (m *AuditMessage) GetLeaderStatus() *LeaderStatus {
	if x, ok := m.GetMsg().(*AuditMessage_LeaderStatus); ok {
		return x.LeaderStatus
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*AuditMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _AuditMessage_OneofMarshaler, _AuditMessage_OneofUnmarshaler, _AuditMessage_OneofSizer, []interface{}{
		(*AuditMessage_Commit)(nil),
		(*AuditMessage_LeaderStatus)(nil),
	}
}

func _AuditMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*AuditMessage)
	// msg
	switch x := m.Msg.(type) {
	case *AuditMessage_Commit:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Commit); err != nil {
			return err
		}
	case *AuditMessage_LeaderStatus:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.LeaderStatus); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AuditMessage.Msg has unexpected type %T", x)
	}
	return nil
}

func _AuditMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*AuditMessage)
	switch tag {
	case 1: // msg.commit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CommitNotification)
		err := b.DecodeMessage(msg)
		m.Msg = &AuditMessage_Commit{msg}
		return true, err
	case 2: // msg.leader_status
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LeaderStatus)
		err := b.DecodeMessage(msg)
		m.Msg = &AuditMessage_LeaderStatus{msg}
		return true, err
	default:
		return false, nil
	}
}

func _AuditMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*AuditMessage)
	// msg
	switch x := m.Msg.(type) {
	case *AuditMessage_Commit:
		s := proto.Size(x.Commit)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AuditMessage_LeaderStatus:
		s := proto.Size(x.LeaderStatus)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type LeaderStatus struct {
	Term                 uint64   `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Leader               string   `protobuf:"bytes,2,opt,name=leader,proto3" json:"leader,omitempty"`
	CurrentLogIndex      uint64   `protobuf:"varint,3,opt,name=current_log_index,json=currentLogIndex,proto3" json:"current_log_index,omitempty"`
	CurrentCommitIndex   uint64   `protobuf:"varint,4,opt,name=current_commit_index,json=currentCommitIndex,proto3" json:"current_commit_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LeaderStatus) Reset()         { *m = LeaderStatus{} }
func (m *LeaderStatus) String() string { return proto.CompactTextString(m) }
func (*LeaderStatus) ProtoMessage()    {}
func (*LeaderStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_audit_bb1b365a4dddcd48, []int{1}
}
func (m *LeaderStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LeaderStatus.Unmarshal(m, b)
}
func (m *LeaderStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LeaderStatus.Marshal(b, m, deterministic)
}
func (dst *LeaderStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LeaderStatus.Merge(dst, src)
}
func (m *LeaderStatus) XXX_Size() int {
	return xxx_messageInfo_LeaderStatus.Size(m)
}
func (m *LeaderStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_LeaderStatus.DiscardUnknown(m)
}

var xxx_messageInfo_LeaderStatus proto.InternalMessageInfo

func (m *LeaderStatus) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *LeaderStatus) GetLeader() string {
	if m != nil {
		return m.Leader
	}
	return ""
}

func (m *LeaderStatus) GetCurrentLogIndex() uint64 {
	if m != nil {
		return m.CurrentLogIndex
	}
	return 0
}

func (m *LeaderStatus) GetCurrentCommitIndex() uint64 {
	if m != nil {
		return m.CurrentCommitIndex
	}
	return 0
}

type CommitNotification struct {
	SenderUuid           string   `protobuf:"bytes,1,opt,name=sender_uuid,json=senderUuid,proto3" json:"sender_uuid,omitempty"`
	LogIndex             uint64   `protobuf:"varint,2,opt,name=log_index,json=logIndex,proto3" json:"log_index,omitempty"`
	Operation            string   `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitNotification) Reset()         { *m = CommitNotification{} }
func (m *CommitNotification) String() string { return proto.CompactTextString(m) }
func (*CommitNotification) ProtoMessage()    {}
func (*CommitNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_audit_bb1b365a4dddcd48, []int{2}
}
func (m *CommitNotification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitNotification.Unmarshal(m, b)
}
func (m *CommitNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitNotification.Marshal(b, m, deterministic)
}
func (dst *CommitNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitNotification.Merge(dst, src)
}
func (m *CommitNotification) XXX_Size() int {
	return xxx_messageInfo_CommitNotification.Size(m)
}
func (m *CommitNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitNotification.DiscardUnknown(m)
}

var xxx_messageInfo_CommitNotification proto.InternalMessageInfo

func (m *CommitNotification) GetSenderUuid() string {
	if m != nil {
		return m.SenderUuid
	}
	return ""
}

func (m *CommitNotification) GetLogIndex() uint64 {
	if m != nil {
		return m.LogIndex
	}
	return 0
}

func (m *CommitNotification) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

func init() {
	proto.RegisterType((*AuditMessage)(nil), "pb.audit_message")
	proto.RegisterType((*LeaderStatus)(nil), "pb.leader_status")
	proto.RegisterType((*CommitNotification)(nil), "pb.commit_notification")
}

func init() { proto.RegisterFile("audit.proto", fileDescriptor_audit_bb1b365a4dddcd48) }

var fileDescriptor_audit_bb1b365a4dddcd48 = []byte{
	// 275 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x39, 0x4b, 0xc4, 0x40,
	0x14, 0xc7, 0x37, 0xd9, 0x18, 0xcc, 0x8b, 0x8b, 0xec, 0x53, 0x34, 0xa0, 0xa0, 0xa4, 0x12, 0x8b,
	0xe0, 0xd1, 0x58, 0x6b, 0xb3, 0x82, 0xd5, 0x88, 0x75, 0xc8, 0x31, 0x86, 0x81, 0x24, 0x13, 0xe7,
	0x00, 0x7b, 0x3f, 0x85, 0xdf, 0x56, 0xf2, 0x66, 0x96, 0x45, 0xb1, 0xcb, 0xfc, 0x2f, 0x7e, 0x8f,
	0x40, 0x5a, 0xd9, 0x56, 0x98, 0x62, 0x52, 0xd2, 0x48, 0x0c, 0xa7, 0x3a, 0xff, 0x0a, 0x60, 0x45,
	0x5a, 0x39, 0x70, 0xad, 0xab, 0x8e, 0xe3, 0x2d, 0xc4, 0x8d, 0x1c, 0x06, 0x61, 0xb2, 0xe0, 0x32,
	0xb8, 0x4a, 0xef, 0x4e, 0x8b, 0xa9, 0x2e, 0x9c, 0x52, 0x8e, 0xd2, 0x88, 0x77, 0xd1, 0x54, 0x46,
	0xc8, 0x71, 0xb3, 0x60, 0x3e, 0x88, 0x0f, 0xb0, 0xea, 0x79, 0xd5, 0x72, 0x55, 0x6a, 0x53, 0x19,
	0xab, 0xb3, 0x90, 0x9a, 0xeb, 0xb9, 0xf9, 0xcb, 0xd8, 0x2c, 0xd8, 0x81, 0x13, 0x5e, 0xe9, 0xfd,
	0xb8, 0x07, 0xcb, 0x41, 0x77, 0xf9, 0x77, 0xf0, 0x67, 0x01, 0x11, 0x22, 0xc3, 0xd5, 0x40, 0x0c,
	0x11, 0xa3, 0x6f, 0x3c, 0x81, 0xd8, 0x85, 0x68, 0x3f, 0x61, 0xfe, 0x85, 0xd7, 0xb0, 0x6e, 0xac,
	0x52, 0x7c, 0x34, 0x65, 0x2f, 0xbb, 0x52, 0x8c, 0x2d, 0xff, 0xcc, 0x96, 0x54, 0x3c, 0xf4, 0xc6,
	0x8b, 0xec, 0x9e, 0x67, 0x19, 0x6f, 0xe0, 0x78, 0x9b, 0xf5, 0x37, 0xb9, 0x78, 0x44, 0x71, 0xf4,
	0xde, 0x13, 0x59, 0xd4, 0xc8, 0x3f, 0xe0, 0xe8, 0x9f, 0xeb, 0xf1, 0x02, 0x52, 0xcd, 0xc7, 0x99,
	0xd8, 0x5a, 0xd1, 0x12, 0x67, 0xc2, 0xc0, 0x49, 0x6f, 0x56, 0xb4, 0x78, 0x06, 0xc9, 0x8e, 0x26,
	0xa4, 0xf9, 0xfd, 0x7e, 0x8b, 0x71, 0x0e, 0x89, 0x9c, 0xb8, 0xa2, 0x29, 0x42, 0x4d, 0xd8, 0x4e,
	0xa8, 0x63, 0xfa, 0x3f, 0xf7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9f, 0x6f, 0xb2, 0xb2, 0xae,
	0x01, 0x00, 0x00,
}
