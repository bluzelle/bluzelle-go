// Code generated by protoc-gen-go. DO NOT EDIT.
// source: database.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DatabaseMsg struct {
	Header *DatabaseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Types that are valid to be assigned to Msg:
	//	*DatabaseMsg_Create
	//	*DatabaseMsg_Read
	//	*DatabaseMsg_Update
	//	*DatabaseMsg_Delete
	//	*DatabaseMsg_Has
	//	*DatabaseMsg_Keys
	//	*DatabaseMsg_Size
	//	*DatabaseMsg_Subscribe
	//	*DatabaseMsg_Unsubscribe
	Msg                  isDatabaseMsg_Msg `protobuf_oneof:"msg"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DatabaseMsg) Reset()         { *m = DatabaseMsg{} }
func (m *DatabaseMsg) String() string { return proto.CompactTextString(m) }
func (*DatabaseMsg) ProtoMessage()    {}
func (*DatabaseMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_b90fe3356ea5df07, []int{0}
}

func (m *DatabaseMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseMsg.Unmarshal(m, b)
}
func (m *DatabaseMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseMsg.Marshal(b, m, deterministic)
}
func (m *DatabaseMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseMsg.Merge(m, src)
}
func (m *DatabaseMsg) XXX_Size() int {
	return xxx_messageInfo_DatabaseMsg.Size(m)
}
func (m *DatabaseMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseMsg.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseMsg proto.InternalMessageInfo

func (m *DatabaseMsg) GetHeader() *DatabaseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type isDatabaseMsg_Msg interface {
	isDatabaseMsg_Msg()
}

type DatabaseMsg_Create struct {
	Create *DatabaseCreate `protobuf:"bytes,2,opt,name=create,proto3,oneof"`
}

type DatabaseMsg_Read struct {
	Read *DatabaseRead `protobuf:"bytes,3,opt,name=read,proto3,oneof"`
}

type DatabaseMsg_Update struct {
	Update *DatabaseUpdate `protobuf:"bytes,4,opt,name=update,proto3,oneof"`
}

type DatabaseMsg_Delete struct {
	Delete *DatabaseDelete `protobuf:"bytes,5,opt,name=delete,proto3,oneof"`
}

type DatabaseMsg_Has struct {
	Has *DatabaseHas `protobuf:"bytes,6,opt,name=has,proto3,oneof"`
}

type DatabaseMsg_Keys struct {
	Keys *DatabaseRequest `protobuf:"bytes,7,opt,name=keys,proto3,oneof"`
}

type DatabaseMsg_Size struct {
	Size *DatabaseRequest `protobuf:"bytes,8,opt,name=size,proto3,oneof"`
}

type DatabaseMsg_Subscribe struct {
	Subscribe *DatabaseSubscribe `protobuf:"bytes,9,opt,name=subscribe,proto3,oneof"`
}

type DatabaseMsg_Unsubscribe struct {
	Unsubscribe *DatabaseUnsubscribe `protobuf:"bytes,10,opt,name=unsubscribe,proto3,oneof"`
}

func (*DatabaseMsg_Create) isDatabaseMsg_Msg() {}

func (*DatabaseMsg_Read) isDatabaseMsg_Msg() {}

func (*DatabaseMsg_Update) isDatabaseMsg_Msg() {}

func (*DatabaseMsg_Delete) isDatabaseMsg_Msg() {}

func (*DatabaseMsg_Has) isDatabaseMsg_Msg() {}

func (*DatabaseMsg_Keys) isDatabaseMsg_Msg() {}

func (*DatabaseMsg_Size) isDatabaseMsg_Msg() {}

func (*DatabaseMsg_Subscribe) isDatabaseMsg_Msg() {}

func (*DatabaseMsg_Unsubscribe) isDatabaseMsg_Msg() {}

func (m *DatabaseMsg) GetMsg() isDatabaseMsg_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *DatabaseMsg) GetCreate() *DatabaseCreate {
	if x, ok := m.GetMsg().(*DatabaseMsg_Create); ok {
		return x.Create
	}
	return nil
}

func (m *DatabaseMsg) GetRead() *DatabaseRead {
	if x, ok := m.GetMsg().(*DatabaseMsg_Read); ok {
		return x.Read
	}
	return nil
}

func (m *DatabaseMsg) GetUpdate() *DatabaseUpdate {
	if x, ok := m.GetMsg().(*DatabaseMsg_Update); ok {
		return x.Update
	}
	return nil
}

func (m *DatabaseMsg) GetDelete() *DatabaseDelete {
	if x, ok := m.GetMsg().(*DatabaseMsg_Delete); ok {
		return x.Delete
	}
	return nil
}

func (m *DatabaseMsg) GetHas() *DatabaseHas {
	if x, ok := m.GetMsg().(*DatabaseMsg_Has); ok {
		return x.Has
	}
	return nil
}

func (m *DatabaseMsg) GetKeys() *DatabaseRequest {
	if x, ok := m.GetMsg().(*DatabaseMsg_Keys); ok {
		return x.Keys
	}
	return nil
}

func (m *DatabaseMsg) GetSize() *DatabaseRequest {
	if x, ok := m.GetMsg().(*DatabaseMsg_Size); ok {
		return x.Size
	}
	return nil
}

func (m *DatabaseMsg) GetSubscribe() *DatabaseSubscribe {
	if x, ok := m.GetMsg().(*DatabaseMsg_Subscribe); ok {
		return x.Subscribe
	}
	return nil
}

func (m *DatabaseMsg) GetUnsubscribe() *DatabaseUnsubscribe {
	if x, ok := m.GetMsg().(*DatabaseMsg_Unsubscribe); ok {
		return x.Unsubscribe
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DatabaseMsg) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DatabaseMsg_OneofMarshaler, _DatabaseMsg_OneofUnmarshaler, _DatabaseMsg_OneofSizer, []interface{}{
		(*DatabaseMsg_Create)(nil),
		(*DatabaseMsg_Read)(nil),
		(*DatabaseMsg_Update)(nil),
		(*DatabaseMsg_Delete)(nil),
		(*DatabaseMsg_Has)(nil),
		(*DatabaseMsg_Keys)(nil),
		(*DatabaseMsg_Size)(nil),
		(*DatabaseMsg_Subscribe)(nil),
		(*DatabaseMsg_Unsubscribe)(nil),
	}
}

func _DatabaseMsg_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DatabaseMsg)
	// msg
	switch x := m.Msg.(type) {
	case *DatabaseMsg_Create:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Create); err != nil {
			return err
		}
	case *DatabaseMsg_Read:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Read); err != nil {
			return err
		}
	case *DatabaseMsg_Update:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Update); err != nil {
			return err
		}
	case *DatabaseMsg_Delete:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Delete); err != nil {
			return err
		}
	case *DatabaseMsg_Has:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Has); err != nil {
			return err
		}
	case *DatabaseMsg_Keys:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Keys); err != nil {
			return err
		}
	case *DatabaseMsg_Size:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Size); err != nil {
			return err
		}
	case *DatabaseMsg_Subscribe:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Subscribe); err != nil {
			return err
		}
	case *DatabaseMsg_Unsubscribe:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Unsubscribe); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DatabaseMsg.Msg has unexpected type %T", x)
	}
	return nil
}

func _DatabaseMsg_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DatabaseMsg)
	switch tag {
	case 2: // msg.create
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatabaseCreate)
		err := b.DecodeMessage(msg)
		m.Msg = &DatabaseMsg_Create{msg}
		return true, err
	case 3: // msg.read
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatabaseRead)
		err := b.DecodeMessage(msg)
		m.Msg = &DatabaseMsg_Read{msg}
		return true, err
	case 4: // msg.update
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatabaseUpdate)
		err := b.DecodeMessage(msg)
		m.Msg = &DatabaseMsg_Update{msg}
		return true, err
	case 5: // msg.delete
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatabaseDelete)
		err := b.DecodeMessage(msg)
		m.Msg = &DatabaseMsg_Delete{msg}
		return true, err
	case 6: // msg.has
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatabaseHas)
		err := b.DecodeMessage(msg)
		m.Msg = &DatabaseMsg_Has{msg}
		return true, err
	case 7: // msg.keys
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatabaseRequest)
		err := b.DecodeMessage(msg)
		m.Msg = &DatabaseMsg_Keys{msg}
		return true, err
	case 8: // msg.size
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatabaseRequest)
		err := b.DecodeMessage(msg)
		m.Msg = &DatabaseMsg_Size{msg}
		return true, err
	case 9: // msg.subscribe
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatabaseSubscribe)
		err := b.DecodeMessage(msg)
		m.Msg = &DatabaseMsg_Subscribe{msg}
		return true, err
	case 10: // msg.unsubscribe
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatabaseUnsubscribe)
		err := b.DecodeMessage(msg)
		m.Msg = &DatabaseMsg_Unsubscribe{msg}
		return true, err
	default:
		return false, nil
	}
}

func _DatabaseMsg_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DatabaseMsg)
	// msg
	switch x := m.Msg.(type) {
	case *DatabaseMsg_Create:
		s := proto.Size(x.Create)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DatabaseMsg_Read:
		s := proto.Size(x.Read)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DatabaseMsg_Update:
		s := proto.Size(x.Update)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DatabaseMsg_Delete:
		s := proto.Size(x.Delete)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DatabaseMsg_Has:
		s := proto.Size(x.Has)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DatabaseMsg_Keys:
		s := proto.Size(x.Keys)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DatabaseMsg_Size:
		s := proto.Size(x.Size)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DatabaseMsg_Subscribe:
		s := proto.Size(x.Subscribe)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DatabaseMsg_Unsubscribe:
		s := proto.Size(x.Unsubscribe)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type DatabaseHeader struct {
	DbUuid               string   `protobuf:"bytes,1,opt,name=db_uuid,json=dbUuid,proto3" json:"db_uuid,omitempty"`
	TransactionId        uint64   `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatabaseHeader) Reset()         { *m = DatabaseHeader{} }
func (m *DatabaseHeader) String() string { return proto.CompactTextString(m) }
func (*DatabaseHeader) ProtoMessage()    {}
func (*DatabaseHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_b90fe3356ea5df07, []int{1}
}

func (m *DatabaseHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseHeader.Unmarshal(m, b)
}
func (m *DatabaseHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseHeader.Marshal(b, m, deterministic)
}
func (m *DatabaseHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseHeader.Merge(m, src)
}
func (m *DatabaseHeader) XXX_Size() int {
	return xxx_messageInfo_DatabaseHeader.Size(m)
}
func (m *DatabaseHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseHeader.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseHeader proto.InternalMessageInfo

func (m *DatabaseHeader) GetDbUuid() string {
	if m != nil {
		return m.DbUuid
	}
	return ""
}

func (m *DatabaseHeader) GetTransactionId() uint64 {
	if m != nil {
		return m.TransactionId
	}
	return 0
}

type DatabaseCreate struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatabaseCreate) Reset()         { *m = DatabaseCreate{} }
func (m *DatabaseCreate) String() string { return proto.CompactTextString(m) }
func (*DatabaseCreate) ProtoMessage()    {}
func (*DatabaseCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_b90fe3356ea5df07, []int{2}
}

func (m *DatabaseCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseCreate.Unmarshal(m, b)
}
func (m *DatabaseCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseCreate.Marshal(b, m, deterministic)
}
func (m *DatabaseCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseCreate.Merge(m, src)
}
func (m *DatabaseCreate) XXX_Size() int {
	return xxx_messageInfo_DatabaseCreate.Size(m)
}
func (m *DatabaseCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseCreate.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseCreate proto.InternalMessageInfo

func (m *DatabaseCreate) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DatabaseCreate) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type DatabaseRead struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatabaseRead) Reset()         { *m = DatabaseRead{} }
func (m *DatabaseRead) String() string { return proto.CompactTextString(m) }
func (*DatabaseRead) ProtoMessage()    {}
func (*DatabaseRead) Descriptor() ([]byte, []int) {
	return fileDescriptor_b90fe3356ea5df07, []int{3}
}

func (m *DatabaseRead) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseRead.Unmarshal(m, b)
}
func (m *DatabaseRead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseRead.Marshal(b, m, deterministic)
}
func (m *DatabaseRead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseRead.Merge(m, src)
}
func (m *DatabaseRead) XXX_Size() int {
	return xxx_messageInfo_DatabaseRead.Size(m)
}
func (m *DatabaseRead) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseRead.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseRead proto.InternalMessageInfo

func (m *DatabaseRead) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type DatabaseUpdate struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatabaseUpdate) Reset()         { *m = DatabaseUpdate{} }
func (m *DatabaseUpdate) String() string { return proto.CompactTextString(m) }
func (*DatabaseUpdate) ProtoMessage()    {}
func (*DatabaseUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_b90fe3356ea5df07, []int{4}
}

func (m *DatabaseUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseUpdate.Unmarshal(m, b)
}
func (m *DatabaseUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseUpdate.Marshal(b, m, deterministic)
}
func (m *DatabaseUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseUpdate.Merge(m, src)
}
func (m *DatabaseUpdate) XXX_Size() int {
	return xxx_messageInfo_DatabaseUpdate.Size(m)
}
func (m *DatabaseUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseUpdate proto.InternalMessageInfo

func (m *DatabaseUpdate) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DatabaseUpdate) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type DatabaseDelete struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatabaseDelete) Reset()         { *m = DatabaseDelete{} }
func (m *DatabaseDelete) String() string { return proto.CompactTextString(m) }
func (*DatabaseDelete) ProtoMessage()    {}
func (*DatabaseDelete) Descriptor() ([]byte, []int) {
	return fileDescriptor_b90fe3356ea5df07, []int{5}
}

func (m *DatabaseDelete) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseDelete.Unmarshal(m, b)
}
func (m *DatabaseDelete) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseDelete.Marshal(b, m, deterministic)
}
func (m *DatabaseDelete) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseDelete.Merge(m, src)
}
func (m *DatabaseDelete) XXX_Size() int {
	return xxx_messageInfo_DatabaseDelete.Size(m)
}
func (m *DatabaseDelete) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseDelete.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseDelete proto.InternalMessageInfo

func (m *DatabaseDelete) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type DatabaseSubscribe struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatabaseSubscribe) Reset()         { *m = DatabaseSubscribe{} }
func (m *DatabaseSubscribe) String() string { return proto.CompactTextString(m) }
func (*DatabaseSubscribe) ProtoMessage()    {}
func (*DatabaseSubscribe) Descriptor() ([]byte, []int) {
	return fileDescriptor_b90fe3356ea5df07, []int{6}
}

func (m *DatabaseSubscribe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseSubscribe.Unmarshal(m, b)
}
func (m *DatabaseSubscribe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseSubscribe.Marshal(b, m, deterministic)
}
func (m *DatabaseSubscribe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseSubscribe.Merge(m, src)
}
func (m *DatabaseSubscribe) XXX_Size() int {
	return xxx_messageInfo_DatabaseSubscribe.Size(m)
}
func (m *DatabaseSubscribe) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseSubscribe.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseSubscribe proto.InternalMessageInfo

func (m *DatabaseSubscribe) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type DatabaseUnsubscribe struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	TransactionId        uint64   `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatabaseUnsubscribe) Reset()         { *m = DatabaseUnsubscribe{} }
func (m *DatabaseUnsubscribe) String() string { return proto.CompactTextString(m) }
func (*DatabaseUnsubscribe) ProtoMessage()    {}
func (*DatabaseUnsubscribe) Descriptor() ([]byte, []int) {
	return fileDescriptor_b90fe3356ea5df07, []int{7}
}

func (m *DatabaseUnsubscribe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseUnsubscribe.Unmarshal(m, b)
}
func (m *DatabaseUnsubscribe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseUnsubscribe.Marshal(b, m, deterministic)
}
func (m *DatabaseUnsubscribe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseUnsubscribe.Merge(m, src)
}
func (m *DatabaseUnsubscribe) XXX_Size() int {
	return xxx_messageInfo_DatabaseUnsubscribe.Size(m)
}
func (m *DatabaseUnsubscribe) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseUnsubscribe.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseUnsubscribe proto.InternalMessageInfo

func (m *DatabaseUnsubscribe) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DatabaseUnsubscribe) GetTransactionId() uint64 {
	if m != nil {
		return m.TransactionId
	}
	return 0
}

type DatabaseHas struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatabaseHas) Reset()         { *m = DatabaseHas{} }
func (m *DatabaseHas) String() string { return proto.CompactTextString(m) }
func (*DatabaseHas) ProtoMessage()    {}
func (*DatabaseHas) Descriptor() ([]byte, []int) {
	return fileDescriptor_b90fe3356ea5df07, []int{8}
}

func (m *DatabaseHas) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseHas.Unmarshal(m, b)
}
func (m *DatabaseHas) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseHas.Marshal(b, m, deterministic)
}
func (m *DatabaseHas) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseHas.Merge(m, src)
}
func (m *DatabaseHas) XXX_Size() int {
	return xxx_messageInfo_DatabaseHas.Size(m)
}
func (m *DatabaseHas) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseHas.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseHas proto.InternalMessageInfo

func (m *DatabaseHas) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type DatabaseSubscriptionUpdate struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatabaseSubscriptionUpdate) Reset()         { *m = DatabaseSubscriptionUpdate{} }
func (m *DatabaseSubscriptionUpdate) String() string { return proto.CompactTextString(m) }
func (*DatabaseSubscriptionUpdate) ProtoMessage()    {}
func (*DatabaseSubscriptionUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_b90fe3356ea5df07, []int{9}
}

func (m *DatabaseSubscriptionUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseSubscriptionUpdate.Unmarshal(m, b)
}
func (m *DatabaseSubscriptionUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseSubscriptionUpdate.Marshal(b, m, deterministic)
}
func (m *DatabaseSubscriptionUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseSubscriptionUpdate.Merge(m, src)
}
func (m *DatabaseSubscriptionUpdate) XXX_Size() int {
	return xxx_messageInfo_DatabaseSubscriptionUpdate.Size(m)
}
func (m *DatabaseSubscriptionUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseSubscriptionUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseSubscriptionUpdate proto.InternalMessageInfo

func (m *DatabaseSubscriptionUpdate) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DatabaseSubscriptionUpdate) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type DatabaseRedirectResponse struct {
	LeaderId             string   `protobuf:"bytes,1,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	LeaderName           string   `protobuf:"bytes,2,opt,name=leader_name,json=leaderName,proto3" json:"leader_name,omitempty"`
	LeaderHost           string   `protobuf:"bytes,3,opt,name=leader_host,json=leaderHost,proto3" json:"leader_host,omitempty"`
	LeaderPort           uint32   `protobuf:"varint,4,opt,name=leader_port,json=leaderPort,proto3" json:"leader_port,omitempty"`
	LeaderHttpPort       uint32   `protobuf:"varint,5,opt,name=leader_http_port,json=leaderHttpPort,proto3" json:"leader_http_port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatabaseRedirectResponse) Reset()         { *m = DatabaseRedirectResponse{} }
func (m *DatabaseRedirectResponse) String() string { return proto.CompactTextString(m) }
func (*DatabaseRedirectResponse) ProtoMessage()    {}
func (*DatabaseRedirectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b90fe3356ea5df07, []int{10}
}

func (m *DatabaseRedirectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseRedirectResponse.Unmarshal(m, b)
}
func (m *DatabaseRedirectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseRedirectResponse.Marshal(b, m, deterministic)
}
func (m *DatabaseRedirectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseRedirectResponse.Merge(m, src)
}
func (m *DatabaseRedirectResponse) XXX_Size() int {
	return xxx_messageInfo_DatabaseRedirectResponse.Size(m)
}
func (m *DatabaseRedirectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseRedirectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseRedirectResponse proto.InternalMessageInfo

func (m *DatabaseRedirectResponse) GetLeaderId() string {
	if m != nil {
		return m.LeaderId
	}
	return ""
}

func (m *DatabaseRedirectResponse) GetLeaderName() string {
	if m != nil {
		return m.LeaderName
	}
	return ""
}

func (m *DatabaseRedirectResponse) GetLeaderHost() string {
	if m != nil {
		return m.LeaderHost
	}
	return ""
}

func (m *DatabaseRedirectResponse) GetLeaderPort() uint32 {
	if m != nil {
		return m.LeaderPort
	}
	return 0
}

func (m *DatabaseRedirectResponse) GetLeaderHttpPort() uint32 {
	if m != nil {
		return m.LeaderHttpPort
	}
	return 0
}

type DatabaseHasResponse struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Has                  bool     `protobuf:"varint,2,opt,name=has,proto3" json:"has,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatabaseHasResponse) Reset()         { *m = DatabaseHasResponse{} }
func (m *DatabaseHasResponse) String() string { return proto.CompactTextString(m) }
func (*DatabaseHasResponse) ProtoMessage()    {}
func (*DatabaseHasResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b90fe3356ea5df07, []int{11}
}

func (m *DatabaseHasResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseHasResponse.Unmarshal(m, b)
}
func (m *DatabaseHasResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseHasResponse.Marshal(b, m, deterministic)
}
func (m *DatabaseHasResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseHasResponse.Merge(m, src)
}
func (m *DatabaseHasResponse) XXX_Size() int {
	return xxx_messageInfo_DatabaseHasResponse.Size(m)
}
func (m *DatabaseHasResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseHasResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseHasResponse proto.InternalMessageInfo

func (m *DatabaseHasResponse) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DatabaseHasResponse) GetHas() bool {
	if m != nil {
		return m.Has
	}
	return false
}

type DatabaseKeysResponse struct {
	Keys                 []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatabaseKeysResponse) Reset()         { *m = DatabaseKeysResponse{} }
func (m *DatabaseKeysResponse) String() string { return proto.CompactTextString(m) }
func (*DatabaseKeysResponse) ProtoMessage()    {}
func (*DatabaseKeysResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b90fe3356ea5df07, []int{12}
}

func (m *DatabaseKeysResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseKeysResponse.Unmarshal(m, b)
}
func (m *DatabaseKeysResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseKeysResponse.Marshal(b, m, deterministic)
}
func (m *DatabaseKeysResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseKeysResponse.Merge(m, src)
}
func (m *DatabaseKeysResponse) XXX_Size() int {
	return xxx_messageInfo_DatabaseKeysResponse.Size(m)
}
func (m *DatabaseKeysResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseKeysResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseKeysResponse proto.InternalMessageInfo

func (m *DatabaseKeysResponse) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

type DatabaseReadResponse struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatabaseReadResponse) Reset()         { *m = DatabaseReadResponse{} }
func (m *DatabaseReadResponse) String() string { return proto.CompactTextString(m) }
func (*DatabaseReadResponse) ProtoMessage()    {}
func (*DatabaseReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b90fe3356ea5df07, []int{13}
}

func (m *DatabaseReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseReadResponse.Unmarshal(m, b)
}
func (m *DatabaseReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseReadResponse.Marshal(b, m, deterministic)
}
func (m *DatabaseReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseReadResponse.Merge(m, src)
}
func (m *DatabaseReadResponse) XXX_Size() int {
	return xxx_messageInfo_DatabaseReadResponse.Size(m)
}
func (m *DatabaseReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseReadResponse proto.InternalMessageInfo

func (m *DatabaseReadResponse) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *DatabaseReadResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type DatabaseSizeResponse struct {
	Bytes                int32    `protobuf:"varint,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Keys                 int32    `protobuf:"varint,2,opt,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatabaseSizeResponse) Reset()         { *m = DatabaseSizeResponse{} }
func (m *DatabaseSizeResponse) String() string { return proto.CompactTextString(m) }
func (*DatabaseSizeResponse) ProtoMessage()    {}
func (*DatabaseSizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b90fe3356ea5df07, []int{14}
}

func (m *DatabaseSizeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseSizeResponse.Unmarshal(m, b)
}
func (m *DatabaseSizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseSizeResponse.Marshal(b, m, deterministic)
}
func (m *DatabaseSizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseSizeResponse.Merge(m, src)
}
func (m *DatabaseSizeResponse) XXX_Size() int {
	return xxx_messageInfo_DatabaseSizeResponse.Size(m)
}
func (m *DatabaseSizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseSizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseSizeResponse proto.InternalMessageInfo

func (m *DatabaseSizeResponse) GetBytes() int32 {
	if m != nil {
		return m.Bytes
	}
	return 0
}

func (m *DatabaseSizeResponse) GetKeys() int32 {
	if m != nil {
		return m.Keys
	}
	return 0
}

type DatabaseRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatabaseRequest) Reset()         { *m = DatabaseRequest{} }
func (m *DatabaseRequest) String() string { return proto.CompactTextString(m) }
func (*DatabaseRequest) ProtoMessage()    {}
func (*DatabaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b90fe3356ea5df07, []int{15}
}

func (m *DatabaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseRequest.Unmarshal(m, b)
}
func (m *DatabaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseRequest.Marshal(b, m, deterministic)
}
func (m *DatabaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseRequest.Merge(m, src)
}
func (m *DatabaseRequest) XXX_Size() int {
	return xxx_messageInfo_DatabaseRequest.Size(m)
}
func (m *DatabaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseRequest proto.InternalMessageInfo

type DatabaseError struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatabaseError) Reset()         { *m = DatabaseError{} }
func (m *DatabaseError) String() string { return proto.CompactTextString(m) }
func (*DatabaseError) ProtoMessage()    {}
func (*DatabaseError) Descriptor() ([]byte, []int) {
	return fileDescriptor_b90fe3356ea5df07, []int{16}
}

func (m *DatabaseError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseError.Unmarshal(m, b)
}
func (m *DatabaseError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseError.Marshal(b, m, deterministic)
}
func (m *DatabaseError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseError.Merge(m, src)
}
func (m *DatabaseError) XXX_Size() int {
	return xxx_messageInfo_DatabaseError.Size(m)
}
func (m *DatabaseError) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseError.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseError proto.InternalMessageInfo

func (m *DatabaseError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DatabaseResponse struct {
	Header *DatabaseHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// Types that are valid to be assigned to Response:
	//	*DatabaseResponse_Redirect
	//	*DatabaseResponse_SubscriptionUpdate
	//	*DatabaseResponse_Read
	//	*DatabaseResponse_Has
	//	*DatabaseResponse_Keys
	//	*DatabaseResponse_Size
	//	*DatabaseResponse_Error
	Response             isDatabaseResponse_Response `protobuf_oneof:"response"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *DatabaseResponse) Reset()         { *m = DatabaseResponse{} }
func (m *DatabaseResponse) String() string { return proto.CompactTextString(m) }
func (*DatabaseResponse) ProtoMessage()    {}
func (*DatabaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b90fe3356ea5df07, []int{17}
}

func (m *DatabaseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatabaseResponse.Unmarshal(m, b)
}
func (m *DatabaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatabaseResponse.Marshal(b, m, deterministic)
}
func (m *DatabaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatabaseResponse.Merge(m, src)
}
func (m *DatabaseResponse) XXX_Size() int {
	return xxx_messageInfo_DatabaseResponse.Size(m)
}
func (m *DatabaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DatabaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DatabaseResponse proto.InternalMessageInfo

func (m *DatabaseResponse) GetHeader() *DatabaseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type isDatabaseResponse_Response interface {
	isDatabaseResponse_Response()
}

type DatabaseResponse_Redirect struct {
	Redirect *DatabaseRedirectResponse `protobuf:"bytes,2,opt,name=redirect,proto3,oneof"`
}

type DatabaseResponse_SubscriptionUpdate struct {
	SubscriptionUpdate *DatabaseSubscriptionUpdate `protobuf:"bytes,3,opt,name=subscription_update,json=subscriptionUpdate,proto3,oneof"`
}

type DatabaseResponse_Read struct {
	Read *DatabaseReadResponse `protobuf:"bytes,4,opt,name=read,proto3,oneof"`
}

type DatabaseResponse_Has struct {
	Has *DatabaseHasResponse `protobuf:"bytes,5,opt,name=has,proto3,oneof"`
}

type DatabaseResponse_Keys struct {
	Keys *DatabaseKeysResponse `protobuf:"bytes,6,opt,name=keys,proto3,oneof"`
}

type DatabaseResponse_Size struct {
	Size *DatabaseSizeResponse `protobuf:"bytes,7,opt,name=size,proto3,oneof"`
}

type DatabaseResponse_Error struct {
	Error *DatabaseError `protobuf:"bytes,8,opt,name=error,proto3,oneof"`
}

func (*DatabaseResponse_Redirect) isDatabaseResponse_Response() {}

func (*DatabaseResponse_SubscriptionUpdate) isDatabaseResponse_Response() {}

func (*DatabaseResponse_Read) isDatabaseResponse_Response() {}

func (*DatabaseResponse_Has) isDatabaseResponse_Response() {}

func (*DatabaseResponse_Keys) isDatabaseResponse_Response() {}

func (*DatabaseResponse_Size) isDatabaseResponse_Response() {}

func (*DatabaseResponse_Error) isDatabaseResponse_Response() {}

func (m *DatabaseResponse) GetResponse() isDatabaseResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *DatabaseResponse) GetRedirect() *DatabaseRedirectResponse {
	if x, ok := m.GetResponse().(*DatabaseResponse_Redirect); ok {
		return x.Redirect
	}
	return nil
}

func (m *DatabaseResponse) GetSubscriptionUpdate() *DatabaseSubscriptionUpdate {
	if x, ok := m.GetResponse().(*DatabaseResponse_SubscriptionUpdate); ok {
		return x.SubscriptionUpdate
	}
	return nil
}

func (m *DatabaseResponse) GetRead() *DatabaseReadResponse {
	if x, ok := m.GetResponse().(*DatabaseResponse_Read); ok {
		return x.Read
	}
	return nil
}

func (m *DatabaseResponse) GetHas() *DatabaseHasResponse {
	if x, ok := m.GetResponse().(*DatabaseResponse_Has); ok {
		return x.Has
	}
	return nil
}

func (m *DatabaseResponse) GetKeys() *DatabaseKeysResponse {
	if x, ok := m.GetResponse().(*DatabaseResponse_Keys); ok {
		return x.Keys
	}
	return nil
}

func (m *DatabaseResponse) GetSize() *DatabaseSizeResponse {
	if x, ok := m.GetResponse().(*DatabaseResponse_Size); ok {
		return x.Size
	}
	return nil
}

func (m *DatabaseResponse) GetError() *DatabaseError {
	if x, ok := m.GetResponse().(*DatabaseResponse_Error); ok {
		return x.Error
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DatabaseResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DatabaseResponse_OneofMarshaler, _DatabaseResponse_OneofUnmarshaler, _DatabaseResponse_OneofSizer, []interface{}{
		(*DatabaseResponse_Redirect)(nil),
		(*DatabaseResponse_SubscriptionUpdate)(nil),
		(*DatabaseResponse_Read)(nil),
		(*DatabaseResponse_Has)(nil),
		(*DatabaseResponse_Keys)(nil),
		(*DatabaseResponse_Size)(nil),
		(*DatabaseResponse_Error)(nil),
	}
}

func _DatabaseResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DatabaseResponse)
	// response
	switch x := m.Response.(type) {
	case *DatabaseResponse_Redirect:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Redirect); err != nil {
			return err
		}
	case *DatabaseResponse_SubscriptionUpdate:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SubscriptionUpdate); err != nil {
			return err
		}
	case *DatabaseResponse_Read:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Read); err != nil {
			return err
		}
	case *DatabaseResponse_Has:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Has); err != nil {
			return err
		}
	case *DatabaseResponse_Keys:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Keys); err != nil {
			return err
		}
	case *DatabaseResponse_Size:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Size); err != nil {
			return err
		}
	case *DatabaseResponse_Error:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Error); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DatabaseResponse.Response has unexpected type %T", x)
	}
	return nil
}

func _DatabaseResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DatabaseResponse)
	switch tag {
	case 2: // response.redirect
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatabaseRedirectResponse)
		err := b.DecodeMessage(msg)
		m.Response = &DatabaseResponse_Redirect{msg}
		return true, err
	case 3: // response.subscription_update
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatabaseSubscriptionUpdate)
		err := b.DecodeMessage(msg)
		m.Response = &DatabaseResponse_SubscriptionUpdate{msg}
		return true, err
	case 4: // response.read
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatabaseReadResponse)
		err := b.DecodeMessage(msg)
		m.Response = &DatabaseResponse_Read{msg}
		return true, err
	case 5: // response.has
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatabaseHasResponse)
		err := b.DecodeMessage(msg)
		m.Response = &DatabaseResponse_Has{msg}
		return true, err
	case 6: // response.keys
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatabaseKeysResponse)
		err := b.DecodeMessage(msg)
		m.Response = &DatabaseResponse_Keys{msg}
		return true, err
	case 7: // response.size
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatabaseSizeResponse)
		err := b.DecodeMessage(msg)
		m.Response = &DatabaseResponse_Size{msg}
		return true, err
	case 8: // response.error
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DatabaseError)
		err := b.DecodeMessage(msg)
		m.Response = &DatabaseResponse_Error{msg}
		return true, err
	default:
		return false, nil
	}
}

func _DatabaseResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DatabaseResponse)
	// response
	switch x := m.Response.(type) {
	case *DatabaseResponse_Redirect:
		s := proto.Size(x.Redirect)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DatabaseResponse_SubscriptionUpdate:
		s := proto.Size(x.SubscriptionUpdate)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DatabaseResponse_Read:
		s := proto.Size(x.Read)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DatabaseResponse_Has:
		s := proto.Size(x.Has)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DatabaseResponse_Keys:
		s := proto.Size(x.Keys)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DatabaseResponse_Size:
		s := proto.Size(x.Size)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DatabaseResponse_Error:
		s := proto.Size(x.Error)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*DatabaseMsg)(nil), "pb.database_msg")
	proto.RegisterType((*DatabaseHeader)(nil), "pb.database_header")
	proto.RegisterType((*DatabaseCreate)(nil), "pb.database_create")
	proto.RegisterType((*DatabaseRead)(nil), "pb.database_read")
	proto.RegisterType((*DatabaseUpdate)(nil), "pb.database_update")
	proto.RegisterType((*DatabaseDelete)(nil), "pb.database_delete")
	proto.RegisterType((*DatabaseSubscribe)(nil), "pb.database_subscribe")
	proto.RegisterType((*DatabaseUnsubscribe)(nil), "pb.database_unsubscribe")
	proto.RegisterType((*DatabaseHas)(nil), "pb.database_has")
	proto.RegisterType((*DatabaseSubscriptionUpdate)(nil), "pb.database_subscription_update")
	proto.RegisterType((*DatabaseRedirectResponse)(nil), "pb.database_redirect_response")
	proto.RegisterType((*DatabaseHasResponse)(nil), "pb.database_has_response")
	proto.RegisterType((*DatabaseKeysResponse)(nil), "pb.database_keys_response")
	proto.RegisterType((*DatabaseReadResponse)(nil), "pb.database_read_response")
	proto.RegisterType((*DatabaseSizeResponse)(nil), "pb.database_size_response")
	proto.RegisterType((*DatabaseRequest)(nil), "pb.database_request")
	proto.RegisterType((*DatabaseError)(nil), "pb.database_error")
	proto.RegisterType((*DatabaseResponse)(nil), "pb.database_response")
}

func init() { proto.RegisterFile("database.proto", fileDescriptor_b90fe3356ea5df07) }

var fileDescriptor_b90fe3356ea5df07 = []byte{
	// 709 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x95, 0x5b, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0xd3, 0xa5, 0xe9, 0xe5, 0xec, 0x42, 0xe7, 0x95, 0x11, 0x06, 0x82, 0x12, 0x6e, 0xd3,
	0x80, 0x69, 0x02, 0x09, 0x09, 0xb1, 0x07, 0xb4, 0x07, 0x94, 0xbd, 0x70, 0x31, 0xda, 0x73, 0xe5,
	0xd4, 0xd6, 0x16, 0x6d, 0x6d, 0x82, 0xed, 0x20, 0x95, 0x0f, 0xc8, 0x33, 0x1f, 0x84, 0x0f, 0x81,
	0x7c, 0x69, 0xea, 0xa4, 0xd1, 0xb4, 0xbd, 0x25, 0x3e, 0xbf, 0xf3, 0xcf, 0xc9, 0xb9, 0x19, 0xb6,
	0x28, 0x91, 0x24, 0x21, 0x82, 0x1d, 0xe6, 0x3c, 0x93, 0x19, 0x5a, 0xcb, 0x93, 0xe8, 0x9f, 0x0f,
	0x1b, 0x8b, 0xe3, 0xf1, 0x54, 0x9c, 0xa3, 0x57, 0xd0, 0xb9, 0x60, 0x84, 0x32, 0x1e, 0xb6, 0x46,
	0xad, 0xfd, 0xf5, 0xb7, 0x3b, 0x87, 0x79, 0x72, 0x58, 0x12, 0xc6, 0x84, 0x2d, 0x82, 0xde, 0x40,
	0x67, 0xc2, 0x19, 0x91, 0x2c, 0x5c, 0x6b, 0x80, 0x8d, 0x29, 0xf6, 0xb0, 0x85, 0xd0, 0x4b, 0x68,
	0x73, 0x46, 0x68, 0xe8, 0x6b, 0x78, 0xbb, 0x02, 0x2b, 0x43, 0xec, 0x61, 0x0d, 0x28, 0xdd, 0x22,
	0xa7, 0x4a, 0xb7, 0xdd, 0xa0, 0x6b, 0x4c, 0x4a, 0xd7, 0x3c, 0x29, 0x9c, 0xb2, 0x2b, 0x26, 0x59,
	0x18, 0x34, 0xe0, 0xc6, 0xa4, 0x70, 0xf3, 0x84, 0x9e, 0x81, 0x7f, 0x41, 0x44, 0xd8, 0xd1, 0xec,
	0xa0, 0xfa, 0x7f, 0x44, 0xc4, 0x1e, 0x56, 0x66, 0x74, 0x00, 0xed, 0x4b, 0x36, 0x17, 0x61, 0x57,
	0x63, 0xc3, 0x5a, 0xb0, 0x3f, 0x0b, 0x26, 0xa4, 0x8a, 0x57, 0x31, 0x8a, 0x15, 0xe9, 0x6f, 0x16,
	0xf6, 0xae, 0x67, 0x15, 0x83, 0xde, 0x43, 0x5f, 0x14, 0x89, 0x98, 0xf0, 0x34, 0x61, 0x61, 0x5f,
	0x3b, 0xec, 0x56, 0x1c, 0x4a, 0x6b, 0xec, 0xe1, 0x25, 0x8a, 0x8e, 0x61, 0xbd, 0x98, 0x2d, 0x3d,
	0x41, 0x7b, 0x86, 0xd5, 0xc4, 0xcc, 0x5c, 0x5f, 0x17, 0x3f, 0x09, 0xc0, 0x9f, 0x8a, 0xf3, 0xe8,
	0x3b, 0xdc, 0xa9, 0xd5, 0x12, 0xdd, 0x83, 0x2e, 0x4d, 0xc6, 0x45, 0x91, 0x52, 0x5d, 0xf1, 0x3e,
	0xee, 0xd0, 0xe4, 0xac, 0x48, 0x29, 0x7a, 0x0e, 0x5b, 0x92, 0x93, 0x99, 0x20, 0x13, 0x99, 0x66,
	0xb3, 0x71, 0x4a, 0x75, 0x91, 0xdb, 0x78, 0xd3, 0x39, 0x3d, 0xa5, 0xd1, 0x07, 0x47, 0xd2, 0xd6,
	0x79, 0x00, 0xfe, 0x25, 0x9b, 0x5b, 0x39, 0xf5, 0x88, 0x86, 0x10, 0xfc, 0x22, 0x57, 0x85, 0xe9,
	0x93, 0x0d, 0x6c, 0x5e, 0xa2, 0x27, 0xb0, 0x59, 0xa9, 0xff, 0xaa, 0x63, 0x45, 0xdd, 0x56, 0xfb,
	0xa6, 0xea, 0x4f, 0x1d, 0x57, 0x5b, 0xf9, 0x55, 0xfd, 0x17, 0x80, 0x56, 0x13, 0xdf, 0xc0, 0x7d,
	0x85, 0x61, 0x53, 0x9a, 0x1b, 0x82, 0xb9, 0x61, 0xda, 0x46, 0xce, 0xdc, 0xa9, 0x76, 0x5b, 0xfd,
	0xe4, 0x67, 0x78, 0x58, 0x0f, 0x2d, 0xd7, 0x92, 0xb7, 0xcc, 0xc3, 0x9f, 0x16, 0xec, 0x39, 0x69,
	0xa6, 0x29, 0x67, 0x13, 0x39, 0xe6, 0x4c, 0xe4, 0xd9, 0x4c, 0x30, 0xf4, 0x00, 0xfa, 0x57, 0xba,
	0x13, 0xc6, 0x65, 0x07, 0xf4, 0xcc, 0xc1, 0x29, 0x45, 0x8f, 0x61, 0xdd, 0x1a, 0x67, 0x64, 0x6a,
	0x74, 0xfb, 0x18, 0xcc, 0xd1, 0x17, 0x32, 0x65, 0x0e, 0x70, 0x91, 0x09, 0xa9, 0x27, 0xbb, 0x04,
	0xe2, 0x4c, 0x48, 0x07, 0xc8, 0x33, 0x2e, 0xf5, 0x3c, 0x6f, 0x2e, 0x80, 0x6f, 0x19, 0x97, 0x68,
	0x1f, 0x06, 0x0b, 0x05, 0x29, 0x73, 0x43, 0x05, 0x9a, 0xda, 0xb2, 0x32, 0x52, 0xe6, 0x8a, 0x8c,
	0x3e, 0xc2, 0x5d, 0x37, 0x65, 0xcb, 0x5f, 0x58, 0xcd, 0xc4, 0xc0, 0x8c, 0xb8, 0x8a, 0xb7, 0xa7,
	0xc7, 0x39, 0x7a, 0x0d, 0xbb, 0xa5, 0xb3, 0x9a, 0xd9, 0xa5, 0x37, 0xb2, 0x83, 0xde, 0x1a, 0xf9,
	0xfb, 0x7d, 0x33, 0xd0, 0xd1, 0x27, 0x87, 0x56, 0x9d, 0x79, 0xdd, 0xb7, 0x9a, 0xb3, 0x7e, 0xe2,
	0x28, 0xa8, 0xb9, 0x5f, 0x2a, 0x0c, 0x21, 0x48, 0xe6, 0x92, 0x09, 0xad, 0x11, 0x60, 0xf3, 0x52,
	0x46, 0xb1, 0xa6, 0x0f, 0x4d, 0x14, 0x08, 0x06, 0xf5, 0x35, 0x12, 0x1d, 0x2c, 0xd7, 0xf8, 0x98,
	0x71, 0x9e, 0x71, 0x14, 0x42, 0x77, 0xca, 0x84, 0x20, 0xe7, 0xcc, 0x46, 0xb5, 0x78, 0x8d, 0xfe,
	0xfa, 0xb0, 0xed, 0x08, 0xd8, 0xef, 0xdf, 0x6a, 0xc3, 0x1f, 0x43, 0x6f, 0xd1, 0x32, 0x76, 0xc7,
	0x3f, 0xaa, 0x6d, 0xb7, 0x5a, 0x3f, 0xc5, 0x1e, 0x2e, 0x3d, 0xd0, 0x0f, 0xd8, 0x69, 0xe8, 0x5c,
	0xbb, 0xff, 0x47, 0x4d, 0x5b, 0xcf, 0xe5, 0x62, 0x0f, 0x23, 0xf7, 0xf8, 0xcc, 0xf4, 0xfd, 0x91,
	0xbd, 0x45, 0xcc, 0xd5, 0xb0, 0xb7, 0x72, 0x8b, 0xb8, 0xa1, 0x2c, 0xae, 0x13, 0xdd, 0x0d, 0xe6,
	0x72, 0xb8, 0x5f, 0x5f, 0xf8, 0x2e, 0xaf, 0x37, 0xff, 0x91, 0x2d, 0x45, 0xa7, 0xe1, 0x03, 0x95,
	0xd6, 0x29, 0xf7, 0xff, 0x91, 0xdd, 0xff, 0xdd, 0x06, 0x8f, 0x4a, 0xf1, 0xcb, 0x5b, 0xe0, 0x00,
	0x02, 0x5d, 0x3d, 0x7b, 0x65, 0xa0, 0x8a, 0x8b, 0xb6, 0xc4, 0x1e, 0x36, 0xc8, 0x09, 0xa8, 0x1a,
	0x18, 0xff, 0xa4, 0xa3, 0xaf, 0xee, 0x77, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0xbd, 0x0b, 0x68,
	0x86, 0xcc, 0x07, 0x00, 0x00,
}
